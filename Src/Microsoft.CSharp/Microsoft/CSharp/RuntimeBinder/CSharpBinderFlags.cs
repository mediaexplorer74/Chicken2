// Decompiled with JetBrains decompiler
// Type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
// Assembly: Microsoft.CSharp, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: DC6D2496-69CF-48FE-AD2F-4EB0C173A6F4
// Assembly location: C:\Users\Admin\Desktop\RE\ChickWinx64\Microsoft.CSharp.dll
// XML documentation location: C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.8\Microsoft.CSharp.xml

using System;
using System.ComponentModel;

#nullable disable
namespace Microsoft.CSharp.RuntimeBinder
{
  /// <summary>Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.</summary>
  [Flags]
  [EditorBrowsable(EditorBrowsableState.Never)]
  public enum CSharpBinderFlags
  {
    /// <summary>There is no additional information required for this binder.</summary>
    None = 0,
    /// <summary>The evaluation of this binder happens in a checked context.</summary>
    CheckedContext = 1,
    /// <summary>The binder represents an invoke on a simple name.</summary>
    InvokeSimpleName = 2,
    /// <summary>The binder represents an invoke on a specialname.</summary>
    InvokeSpecialName = 4,
    /// <summary>The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.</summary>
    BinaryOperationLogical = 8,
    /// <summary>The binder represents an explicit conversion.</summary>
    ConvertExplicit = 16, // 0x00000010
    /// <summary>The binder represents an implicit conversion for use in an array creation expression.</summary>
    ConvertArrayIndex = 32, // 0x00000020
    /// <summary>The result of any bind is going to be indexed get a set index or get index binder.</summary>
    ResultIndexed = 64, // 0x00000040
    /// <summary>The value in this set index or set member comes a compound assignment operator.</summary>
    ValueFromCompoundAssignment = 128, // 0x00000080
    /// <summary>The binder is used in a position that does not require a result, and can therefore bind to a void returning method.</summary>
    ResultDiscarded = 256, // 0x00000100
  }
}
